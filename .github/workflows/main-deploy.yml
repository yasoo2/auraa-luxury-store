name: 🚀 Main Branch Auto Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy both frontend and backend'
        required: false
        default: 'false'
        type: boolean

jobs:
  detect-changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
      any: ${{ steps.changes.outputs.frontend == 'true' || steps.changes.outputs.backend == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

      - name: Changes Summary
        run: |
          echo "🔍 Change Detection Results:"
          echo "Frontend changed: ${{ steps.changes.outputs.frontend }}"
          echo "Backend changed: ${{ steps.changes.outputs.backend }}"
          echo "Force deploy: ${{ github.event.inputs.force_deploy }}"

  validate-secrets:
    name: 🔐 Validate Secrets
    runs-on: ubuntu-latest
    outputs:
      frontend-ready: ${{ steps.check.outputs.frontend-ready }}
      backend-ready: ${{ steps.check.outputs.backend-ready }}
    steps:
      - name: Check Required Secrets
        id: check
        run: |
          # Check frontend secrets
          if [ -n "${{ secrets.VERCEL_TOKEN }}" ] && [ -n "${{ secrets.VERCEL_ORG_ID }}" ] && [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "✅ Frontend secrets complete"
            echo "frontend-ready=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Frontend secrets missing:"
            [ -z "${{ secrets.VERCEL_TOKEN }}" ] && echo "  - VERCEL_TOKEN"
            [ -z "${{ secrets.VERCEL_ORG_ID }}" ] && echo "  - VERCEL_ORG_ID"
            [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ] && echo "  - VERCEL_PROJECT_ID"
            echo "frontend-ready=false" >> $GITHUB_OUTPUT
          fi
          
          # Check backend secrets
          if [ -n "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "✅ Backend secrets complete"
            echo "backend-ready=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Backend secrets missing:"
            echo "  - RENDER_DEPLOY_HOOK"
            echo "backend-ready=false" >> $GITHUB_OUTPUT
          fi

  deploy-frontend:
    name: 🌐 Deploy Frontend
    needs: [detect-changes, validate-secrets]
    if: (needs.detect-changes.outputs.frontend == 'true' || github.event.inputs.force_deploy == 'true') && needs.validate-secrets.outputs.frontend-ready == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock

      - name: Install Dependencies
        working-directory: ./frontend
        run: |
          echo "📦 Installing frontend dependencies..."
          yarn install --frozen-lockfile

      - name: Build Project
        working-directory: ./frontend
        run: |
          echo "🔨 Building frontend project..."
          yarn build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod --confirm'
          working-directory: ./frontend
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Success Notification
        if: success()
        run: |
          echo "🎉 Frontend deployed successfully to Vercel!"
          echo "🔗 Production URL: Check Vercel dashboard"

  deploy-backend:
    name: ⚙️ Deploy Backend  
    needs: [detect-changes, validate-secrets]
    if: (needs.detect-changes.outputs.backend == 'true' || github.event.inputs.force_deploy == 'true') && needs.validate-secrets.outputs.backend-ready == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy
        run: |
          echo "🚀 Triggering Render backend deployment..."
          
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}")
          
          if [ $HTTP_STATUS -eq 200 ] || [ $HTTP_STATUS -eq 201 ]; then
            echo "✅ Backend deployment triggered successfully (HTTP $HTTP_STATUS)"
          else
            echo "❌ Backend deployment failed with HTTP status: $HTTP_STATUS"
            exit 1
          fi

      - name: Success Notification
        if: success()
        run: |
          echo "🎉 Backend deployment triggered successfully!"
          echo "🔗 Check status: Render dashboard"

  deployment-summary:
    name: 📊 Deployment Summary
    needs: [detect-changes, validate-secrets, deploy-frontend, deploy-backend]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate Summary
        run: |
          echo "# 🚀 Deployment Summary for Auraa Luxury" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 🔍 Changes Detected:" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: ${{ needs.detect-changes.outputs.frontend }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: ${{ needs.detect-changes.outputs.backend }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 🔐 Secrets Status:" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend Ready: ${{ needs.validate-secrets.outputs.frontend-ready }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend Ready: ${{ needs.validate-secrets.outputs.backend-ready }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 📦 Deployment Results:" >> $GITHUB_STEP_SUMMARY
          
          # Frontend status
          if [ "${{ needs.deploy-frontend.result }}" = "success" ]; then
            echo "- ✅ Frontend: Successfully deployed to Vercel" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.deploy-frontend.result }}" = "failure" ]; then
            echo "- ❌ Frontend: Deployment failed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.deploy-frontend.result }}" = "skipped" ]; then
            echo "- ⏭️ Frontend: Skipped (no changes or missing secrets)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Backend status  
          if [ "${{ needs.deploy-backend.result }}" = "success" ]; then
            echo "- ✅ Backend: Successfully triggered Render deployment" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.deploy-backend.result }}" = "failure" ]; then
            echo "- ❌ Backend: Deployment trigger failed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.deploy-backend.result }}" = "skipped" ]; then
            echo "- ⏭️ Backend: Skipped (no changes or missing secrets)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔗 Quick Links:" >> $GITHUB_STEP_SUMMARY
          echo "- [Vercel Dashboard](https://vercel.com/dashboard)" >> $GITHUB_STEP_SUMMARY
          echo "- [Render Dashboard](https://dashboard.render.com)" >> $GITHUB_STEP_SUMMARY
          echo "- [Production Site](https://auraaluxury.preview.emergentagent.com)" >> $GITHUB_STEP_SUMMARY